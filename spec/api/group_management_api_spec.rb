=begin
#WhatsAPI Go

#The V2 of WhatsAPI Go

The version of the OpenAPI document: 2.0
Contact: manjit@sponsorbook.io
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.2.1

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::GroupManagementApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'GroupManagementApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::GroupManagementApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of GroupManagementApi' do
    it 'should create an instance of GroupManagementApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::GroupManagementApi)
    end
  end

  # unit tests for instances_instance_key_groups_admin_get
  # Get admin groupss.
  # Returns list of all groups in which you are admin.
  # @param instance_key Instance key
  # @param [Hash] opts the optional parameters
  # @return [MainAPIResponse]
  describe 'instances_instance_key_groups_admin_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for instances_instance_key_groups_create_post
  # Create group.
  # Creates a group with the participant data. The creator is automatically added to the group.
  # @param instance_key Instance key
  # @param data Group create payload
  # @param [Hash] opts the optional parameters
  # @return [MainAPIResponse]
  describe 'instances_instance_key_groups_create_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for instances_instance_key_groups_get
  # Get all groups.
  # Returns list of all groups with participants data. Set include_participants to false to exclude participants data.
  # @param instance_key Instance key
  # @param [Hash] opts the optional parameters
  # @option opts [String] :include_participants Include participants data
  # @return [MainAPIResponse]
  describe 'instances_instance_key_groups_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for instances_instance_key_groups_group_id_announce_put
  # Set group announce.
  # Set if non-admins are allowed to send messages in groups
  # @param instance_key Instance key
  # @param announce Announce status
  # @param group_id Group id of the group
  # @param [Hash] opts the optional parameters
  # @return [MainAPIResponse]
  describe 'instances_instance_key_groups_group_id_announce_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for instances_instance_key_groups_group_id_delete
  # Leaves the group.
  # Leaves the specified group.
  # @param instance_key Instance key
  # @param group_id Group id of the group
  # @param [Hash] opts the optional parameters
  # @return [MainAPIResponse]
  describe 'instances_instance_key_groups_group_id_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for instances_instance_key_groups_group_id_description_put
  # Set group description.
  # Changes the group description
  # @param instance_key Instance key
  # @param group_id Group id of the group
  # @param data Group description data
  # @param [Hash] opts the optional parameters
  # @return [MainAPIResponse]
  describe 'instances_instance_key_groups_group_id_description_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for instances_instance_key_groups_group_id_get
  # Get group.
  # Fetches the group data.
  # @param instance_key Instance key
  # @param group_id Group id of the group
  # @param [Hash] opts the optional parameters
  # @return [MainAPIResponse]
  describe 'instances_instance_key_groups_group_id_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for instances_instance_key_groups_group_id_invite_code_get
  # Get group invite code.
  # Gets the invite code of the group.
  # @param instance_key Instance key
  # @param group_id Group id of the group
  # @param [Hash] opts the optional parameters
  # @return [MainAPIResponse]
  describe 'instances_instance_key_groups_group_id_invite_code_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for instances_instance_key_groups_group_id_lock_put
  # Set group locked.
  # Set if non-admins are allowed to change the group dp and other stuff
  # @param instance_key Instance key
  # @param locked Locked status
  # @param group_id Group id of the group
  # @param [Hash] opts the optional parameters
  # @return [MainAPIResponse]
  describe 'instances_instance_key_groups_group_id_lock_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for instances_instance_key_groups_group_id_name_put
  # Set group name.
  # Changes the group name. The max limit is 22 chars
  # @param instance_key Instance key
  # @param group_id Group id of the group
  # @param data Group name data
  # @param [Hash] opts the optional parameters
  # @return [MainAPIResponse]
  describe 'instances_instance_key_groups_group_id_name_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for instances_instance_key_groups_group_id_participants_add_post
  # Add participant.
  # Handles adding participants to a group. You must be admin in the group or the query will fail.
  # @param instance_key Instance key
  # @param group_id Group id of the group
  # @param data Group update payload
  # @param [Hash] opts the optional parameters
  # @return [MainAPIResponse]
  describe 'instances_instance_key_groups_group_id_participants_add_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for instances_instance_key_groups_group_id_participants_demote_put
  # Demote participant.
  # Demotes admins in groups. You must be admin in the group or the query will fail.
  # @param instance_key Instance key
  # @param group_id Group id of the group
  # @param data Group update payload
  # @param [Hash] opts the optional parameters
  # @return [MainAPIResponse]
  describe 'instances_instance_key_groups_group_id_participants_demote_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for instances_instance_key_groups_group_id_participants_promote_put
  # Promote participant.
  # Promotes participants to admin. You must be admin in the group or the query will fail.
  # @param instance_key Instance key
  # @param group_id Group id of the group
  # @param data Group update payload
  # @param [Hash] opts the optional parameters
  # @return [MainAPIResponse]
  describe 'instances_instance_key_groups_group_id_participants_promote_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for instances_instance_key_groups_group_id_participants_remove_delete
  # Remove participant.
  # Handles removing participants from a group. You must be admin in the group or the query will fail.
  # @param instance_key Instance key
  # @param group_id Group id of the group
  # @param data Group update payload
  # @param [Hash] opts the optional parameters
  # @return [MainAPIResponse]
  describe 'instances_instance_key_groups_group_id_participants_remove_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for instances_instance_key_groups_group_id_profile_pic_put
  # Set group picture.
  # Changes the group profile picture. Currently it only seems to accept JPEG images only
  # @param instance_key Instance key
  # @param group_id Group id of the group
  # @param instances_instance_key_groups_group_id_profile_pic_put_request 
  # @param [Hash] opts the optional parameters
  # @return [MainAPIResponse]
  describe 'instances_instance_key_groups_group_id_profile_pic_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for instances_instance_key_groups_invite_info_get
  # Get group from invite link.
  # Gets a group info from an invite link. An invite link is a link that can be used to join a group. It is usually in the format https://chat.whatsapp.com/{invitecode}
  # @param instance_key Instance key
  # @param invite_link The invite link to check
  # @param [Hash] opts the optional parameters
  # @return [MainAPIResponse]
  describe 'instances_instance_key_groups_invite_info_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
